// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "frc/smartdashboard/SmartDashboard.h"
#include "Commands/AutoShooter.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveWithJoystick.h"
#include "Commands/EncoderDrive.h"
#include "Commands/LimelightOff.h"
#include "Commands/LimelightTrack.h"
#include "Commands/ManualClimber.h"
#include "Commands/ManualIntake.h"
#include "Commands/ManualShooter.h"
#include "Commands/StopShooter.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
systemsController.reset(new frc::Joystick(1));

driveController.reset(new frc::Joystick(0));

mc_Rbump.reset(new frc::JoystickButton(driveController.get(), 6));
mc_Rbump->WhileHeld(new LimelightTrack());
mc_B.reset(new frc::JoystickButton(driveController.get(), 2));
mc_B->WhenPressed(new EncoderDrive(0, 0));

    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("LimelightOff", new LimelightOff());
    frc::SmartDashboard::PutData("ManualClimber", new ManualClimber());
    frc::SmartDashboard::PutData("ManualIntake", new ManualIntake());
    frc::SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getDriveController() {
   return driveController;
}

std::shared_ptr<frc::Joystick> OI::getSystemsController() {
   return systemsController;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
